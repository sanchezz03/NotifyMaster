// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotifyMaster.Infrastructure.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NotifyMaster.Infrastructure.Migrations
{
    [DbContext(typeof(NotifyMasterDbContext))]
    [Migration("20241216013955_Add_Button_Table")]
    partial class Add_Button_Table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NotifyMaster.Core.Entities.Button", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Buttons");
                });

            modelBuilder.Entity("NotifyMaster.Core.Entities.MessageReminder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ButtonId")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("Delay")
                        .HasColumnType("interval");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NotificationPhase")
                        .HasColumnType("integer");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ButtonId");

                    b.ToTable("MessageReminders");
                });

            modelBuilder.Entity("NotifyMaster.Core.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<int>("GroupStatus")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NotifyMaster.Core.Entities.UserReminder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ReminderMessageId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ScheduledTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ReminderMessageId");

                    b.HasIndex("UserId");

                    b.ToTable("UserReminders");
                });

            modelBuilder.Entity("NotifyMaster.Core.Entities.MessageReminder", b =>
                {
                    b.HasOne("NotifyMaster.Core.Entities.Button", "Button")
                        .WithMany()
                        .HasForeignKey("ButtonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Button");
                });

            modelBuilder.Entity("NotifyMaster.Core.Entities.UserReminder", b =>
                {
                    b.HasOne("NotifyMaster.Core.Entities.MessageReminder", "ReminderMessage")
                        .WithMany()
                        .HasForeignKey("ReminderMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NotifyMaster.Core.Entities.User", "User")
                        .WithMany("UserReminders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReminderMessage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NotifyMaster.Core.Entities.User", b =>
                {
                    b.Navigation("UserReminders");
                });
#pragma warning restore 612, 618
        }
    }
}
